var documenterSearchIndex = {"docs":
[{"location":"elastic_constants/#ConstitutiveModels.ElasticConstants","page":"Elastic Constants","title":"ConstitutiveModels.ElasticConstants","text":"struct ElasticConstants{T<:Number}\n\nE::Number\nν::Number\nκ::Number\nλ::Number\nμ::Number\n\n\n\n\n\n","category":"type"},{"location":"elastic_constants/#ConstitutiveModels.ElasticConstants-Tuple{Dict{String}}","page":"Elastic Constants","title":"ConstitutiveModels.ElasticConstants","text":"Allowable parameters names are the following\n\nbulk modulus\nLamé's first constant\nPoisson's ratio\nshear modulus\nYoung's modulus\n\nElasticConstants(\n    params::Dict{String}\n) -> ConstitutiveModels.ElasticConstants\n\n\n\n\n\n\n","category":"method"},{"location":"notation/#Notation","page":"Notation","title":"Notation","text":"","category":"section"},{"location":"notation/","page":"Notation","title":"Notation","text":"Here are a few points on the notation used in the remainder of the document.","category":"page"},{"location":"notation/","page":"Notation","title":"Notation","text":"Vectors will be represented for the most part by lowercase bold-faced latin letters, e.g. a, b, ... except for out of departure from convention such as mathbfE for the electric field vector.","category":"page"},{"location":"notation/","page":"Notation","title":"Notation","text":"Second order tensors will be represented for the most part by uppercase bold-faced latin letters, e.g. mathbfA, mathbfB, ... except for out of departure form convention such as mathbfsigma for the Cauchy stress.","category":"page"},{"location":"notation/#Common-Variables","page":"Notation","title":"Common Variables","text":"","category":"section"},{"location":"notation/","page":"Notation","title":"Notation","text":"Name Symbol Type\nAcoustic tensor mathbfA Second order tensor\nCauchy Stress sigma Second order tensor (spatial)\nDeformation gradient mathbfF Two point tensor\nDensity in current frame rho Scalar\nDensity in reference frame rho_R Scalar\nDisplacement mathbfu Vector\nDisplacement Gradient nablamathbfu Second order Tensor\nHeat flux mathbfq Vector\nHelmholtz free energy psi Scalar\nMaterial tangent mathbbA Fourth order tensor (two bases)\nNormal vector mathbfn Vector\nPK1 Stress mathbfP Two point tensor\nPK2 Stress mathbfS Second order tensor (material)\nState Variables mathcalZ Arbitrary\nTemperature theta Scalar\nTemperature Gradient nablatheta Vector","category":"page"},{"location":"simple_motions/#ConstitutiveModels.AbstractSimpleMotion","page":"Simple Motions","title":"ConstitutiveModels.AbstractSimpleMotion","text":"abstract type AbstractSimpleMotion{T<:Number}\n\n\n\n\n\n","category":"type"},{"location":"simple_motions/#ConstitutiveModels.BiaxialStrain","page":"Simple Motions","title":"ConstitutiveModels.BiaxialStrain","text":"Provides an analytic motion for uniaxial strain\n\nThis is\n\nmathbfF = beginbmatrix\nlambda_1  0          0 \n0          lambda_2  0 \n0          0          1\nendbmatrix\n\n\n\n\n\n","category":"type"},{"location":"simple_motions/#ConstitutiveModels.IsochoricUniaxialStress","page":"Simple Motions","title":"ConstitutiveModels.IsochoricUniaxialStress","text":"Provides an analytic motion for uniaxial strain\n\nThis is\n\nmathbfF = beginbmatrix\nlambda  0                  0 \n0        frac1lambda  0 \n0        0                  frac1lambda\nendbmatrix\n\n\n\n\n\n","category":"type"},{"location":"simple_motions/#ConstitutiveModels.PureShearStrain","page":"Simple Motions","title":"ConstitutiveModels.PureShearStrain","text":"Provides an analytic motion for uniaxial strain\n\nThis is\n\nmathbfF = frac12beginbmatrix\nleft(lambda + lambda^-1right)  left(lambda - lambda^-1right)  0 \nleft(lambda - lambda^-1right)  left(lambda + lambda^-1right)  0 \n0                                    0                                    2\nendbmatrix\n\n\n\n\n\n","category":"type"},{"location":"simple_motions/#ConstitutiveModels.SimpleShear","page":"Simple Motions","title":"ConstitutiveModels.SimpleShear","text":"Provides an analytic motion for simple shear.\n\nThis is\n\nmathbfF = beginbmatrix\n1  gamma  0 \n0  1       0 \n0  0       1\nendbmatrix\n\n\n\n\n\n","category":"type"},{"location":"simple_motions/#ConstitutiveModels.UniaxialStrain","page":"Simple Motions","title":"ConstitutiveModels.UniaxialStrain","text":"Provides an analytic motion for uniaxial strain\n\nThis is\n\nmathbfF = beginbmatrix\nlambda  0  0 \n0        1  0 \n0        0  1\nendbmatrix\n\n\n\n\n\n","category":"type"},{"location":"simple_motions/#ConstitutiveModels.UniaxialStressDisplacementControl","page":"Simple Motions","title":"ConstitutiveModels.UniaxialStressDisplacementControl","text":"Document me\n\n\n\n\n\n","category":"type"},{"location":"simple_motions/#ConstitutiveModels.displacement_gradient-Union{Tuple{T}, Tuple{ConstitutiveModels.AbstractSimpleMotion{T}, Vararg{Any}}} where T","page":"Simple Motions","title":"ConstitutiveModels.displacement_gradient","text":"displacement_gradient(\n    motion::ConstitutiveModels.AbstractSimpleMotion{T},\n    args...\n) -> Tensors.Tensor{2, 3, _A, 9} where _A\n\n\n\n\n\n\n","category":"method"},{"location":"mechanics/linear_elastic/#LinearElastic","page":"LinearElastic","title":"LinearElastic","text":"","category":"section"},{"location":"mechanics/linear_elastic/#ConstitutiveModels.LinearElastic","page":"LinearElastic","title":"ConstitutiveModels.LinearElastic","text":"struct LinearElastic <: ConstitutiveModels.AbstractHyperelasticModel{2, 0}\n\n\n\n\n\n","category":"type"},{"location":"mechanics/linear_elastic/#ConstitutiveModels.helmholtz_free_energy-Tuple{LinearElastic, Vararg{Any, 5}}","page":"LinearElastic","title":"ConstitutiveModels.helmholtz_free_energy","text":"psi = frac12lambda trleft(varepsilonright)^2         + mu varepsilonvarepsilon\n\nhelmholtz_free_energy(\n    _::LinearElastic,\n    props,\n    Δt,\n    ∇u,\n    θ,\n    Z\n) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"mechanics/linear_elastic/#ConstitutiveModels.initialize_props-Tuple{LinearElastic, Dict{String}}","page":"LinearElastic","title":"ConstitutiveModels.initialize_props","text":"initialize_props(\n    _::LinearElastic,\n    inputs::Dict{String}\n) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"mechanics/linear_elastic/#Simple-shear","page":"LinearElastic","title":"Simple shear","text":"","category":"section"},{"location":"mechanics/linear_elastic/#Analytic-solution","page":"LinearElastic","title":"Analytic solution","text":"","category":"section"},{"location":"mechanics/linear_elastic/","page":"LinearElastic","title":"LinearElastic","text":"Fill me out","category":"page"},{"location":"mechanics/linear_elastic/#Verification","page":"LinearElastic","title":"Verification","text":"","category":"section"},{"location":"mechanics/linear_elastic/","page":"LinearElastic","title":"LinearElastic","text":"Here is a comparison of an analytic solution to the uniaxial stress boundary value problem in displacement control.","category":"page"},{"location":"mechanics/linear_elastic/","page":"LinearElastic","title":"LinearElastic","text":"using ConstitutiveModels\nusing Plots\n\nfunction linearelastic_simple_shear()\n    inputs = Dict(\n        \"Young's modulus\" => 1.0,#u\"MPa\",\n        \"Poisson's ratio\" => 0.3\n    )\n\n    model = LinearElastic()\n    props = initialize_props(model, inputs)\n    Δt = 0.0\n    θ = 0.0\n    Z = initialize_state(model)\n\n    γs = LinRange(0., 0.01,101)\n    motion = SimpleShear{Float64}()\n\n    ∇us, σs, Zs = simulate_material_point(cauchy_stress, model, props, Δt, θ, Z, motion, γs)\n\n    μ = props[2]\n    σ_11s_an = 0. * γs\n    σ_22s_an = 0. * γs\n    σ_12s_an = μ * γs\n\n    plot(motion, ∇us, σs, Zs, σ_11s_an, σ_22s_an, σ_12s_an)\nend\nlinearelastic_simple_shear()","category":"page"},{"location":"mechanics/linear_elastic/#Uniaxial-Strain","page":"LinearElastic","title":"Uniaxial Strain","text":"","category":"section"},{"location":"mechanics/linear_elastic/#Analytic-solution-2","page":"LinearElastic","title":"Analytic solution","text":"","category":"section"},{"location":"mechanics/linear_elastic/","page":"LinearElastic","title":"LinearElastic","text":"Fill me out","category":"page"},{"location":"mechanics/linear_elastic/#Verification-2","page":"LinearElastic","title":"Verification","text":"","category":"section"},{"location":"mechanics/linear_elastic/","page":"LinearElastic","title":"LinearElastic","text":"Here is a comparison of an analytic solution to the uniaxial stress boundary value problem in displacement control.","category":"page"},{"location":"mechanics/linear_elastic/","page":"LinearElastic","title":"LinearElastic","text":"using ConstitutiveModels\nusing Plots\n\nfunction linearelastic_uniaxial_strain()\n    inputs = Dict(\n        \"Young's modulus\" => 100e3,#u\"MPa\",\n        \"Poisson's ratio\" => 0.3\n    )\n\n    model = LinearElastic()\n    props = initialize_props(model, inputs)\n    Δt = 0.0\n    θ = 0.0\n    Z = initialize_state(model)\n\n    λs = LinRange(1., 1.001, 101)\n    motion = UniaxialStrain{Float64}()\n\n    # hardcoded parameters for simple models\n    ∇us, σs, Zs = simulate_material_point(cauchy_stress, model, props, Δt, θ, Z, motion, λs)\n\n    λ, μ = props[1], props[2]\n    σ_11s_an = λ * (λs .- 1.) .+ 2. * μ * (λs .- 1.)\n    σ_22s_an = λ * (λs .- 1.)\n    plot(motion, ∇us, σs, Zs, σ_11s_an, σ_22s_an)\n\nend\n\nlinearelastic_uniaxial_strain()","category":"page"},{"location":"mechanics/mechanical_models/#Mechanical-Models","page":"Mechanical Models","title":"Mechanical Models","text":"","category":"section"},{"location":"mechanics/mechanical_models/","page":"Mechanical Models","title":"Mechanical Models","text":"This set of models are useful for composing multiphysics constitutive models in the presence of mechanical loads as well as by themselves when solving e.g. total-Lagrange or update-Lagrange formulations of solid mechanics.","category":"page"},{"location":"mechanics/mechanical_models/","page":"Mechanical Models","title":"Mechanical Models","text":"Balance of Mass","category":"page"},{"location":"mechanics/mechanical_models/","page":"Mechanical Models","title":"Mechanical Models","text":"Total Lagrange rho_R = Jrho","category":"page"},{"location":"mechanics/mechanical_models/","page":"Mechanical Models","title":"Mechanical Models","text":"Total Lagrange","category":"page"},{"location":"mechanics/mechanical_models/","page":"Mechanical Models","title":"Mechanical Models","text":"rho_Rfracpartial^2mathbfupartial t^2 = nablacdotmathbfP + rhomathbfb","category":"page"},{"location":"mechanics/mechanical_models/","page":"Mechanical Models","title":"Mechanical Models","text":"Updated Lagrange","category":"page"},{"location":"mechanics/mechanical_models/#Abstract-Interface","page":"Mechanical Models","title":"Abstract Interface","text":"","category":"section"},{"location":"mechanics/mechanical_models/#ConstitutiveModels.AbstractMechanicalModel","page":"Mechanical Models","title":"ConstitutiveModels.AbstractMechanicalModel","text":"abstract type AbstractMechanicalModel{NP, NS} <: ConstitutiveModels.AbstractConstitutiveModel{NP, NS}\n\n\n\n\n\n","category":"type"},{"location":"mechanics/mechanical_models/#ConstitutiveModels.AbstractHyperelasticModel","page":"Mechanical Models","title":"ConstitutiveModels.AbstractHyperelasticModel","text":"abstract type AbstractHyperelasticModel{NP, NS} <: ConstitutiveModels.AbstractMechanicalModel{NP, NS}\n\n\n\n\n\n","category":"type"},{"location":"thermal_models/#Thermal-Models","page":"Thermal Models","title":"Thermal Models","text":"","category":"section"},{"location":"thermal_models/#Fourier's-Law","page":"Thermal Models","title":"Fourier's Law","text":"","category":"section"},{"location":"thermal_models/#ConstitutiveModels.FouriersLaw","page":"Thermal Models","title":"ConstitutiveModels.FouriersLaw","text":"struct FouriersLaw <: ConstitutiveModels.AbstractThermalModel{1, 0}\n\n\n\n\n\n","category":"type"},{"location":"thermal_models/#ConstitutiveModels.heat_flux-Tuple{ConstitutiveModels.FouriersLaw, Vararg{Any, 5}}","page":"Thermal Models","title":"ConstitutiveModels.heat_flux","text":"heat_flux(\n    _::ConstitutiveModels.FouriersLaw,\n    props,\n    Δt,\n    ∇θ,\n    θ,\n    Z\n) -> Tuple{Any, Any}\n\n\nCalculates the heat flux for  a simple Fourier's law and also returns an empy state\n\nmathbfq = -knablatheta\n\n\n\n\n\n","category":"method"},{"location":"thermal_models/#ConstitutiveModels.initialize_props-Tuple{ConstitutiveModels.FouriersLaw, Dict{String}}","page":"Thermal Models","title":"ConstitutiveModels.initialize_props","text":"initialize_props(\n    _::ConstitutiveModels.FouriersLaw,\n    inputs::Dict{String}\n) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"thermal_models/#Abstract-Interface","page":"Thermal Models","title":"Abstract Interface","text":"","category":"section"},{"location":"thermal_models/#ConstitutiveModels.AbstractThermalModel","page":"Thermal Models","title":"ConstitutiveModels.AbstractThermalModel","text":"abstract type AbstractThermalModel{NP, NS} <: ConstitutiveModels.AbstractConstitutiveModel{NP, NS}\n\n\n\n\n\n","category":"type"},{"location":"thermal_models/#ConstitutiveModels.heat_flux-Union{Tuple{NS}, Tuple{NP}, Tuple{ConstitutiveModels.AbstractThermalModel{NP, NS}, Any, Any, Any, Any, Any, Vararg{Any}}} where {NP, NS}","page":"Thermal Models","title":"ConstitutiveModels.heat_flux","text":"Expected abstract interface where \n\nInputs:\n\nprops      - array of properties\n\nΔt`        - time step\n\n∇θ         - absolute temperature gradient\n\nθ          - absolute temperature\n\nZ          - current (old) state variable array\n\nargs       - potentially additional arguments for special models\n\nOuputs:\n\nmathbfq  - heat flux vector\n\nmathcalZ - new state variable array (different from input Z)\n\nheat_flux(\n    _::ConstitutiveModels.AbstractThermalModel{NP, NS},\n    props,\n    Δt,\n    ∇θ,\n    θ,\n    Z,\n    args...\n) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"mechanics/neohookean/#NeoHookean","page":"NeoHookean","title":"NeoHookean","text":"","category":"section"},{"location":"mechanics/neohookean/#ConstitutiveModels.NeoHookean","page":"NeoHookean","title":"ConstitutiveModels.NeoHookean","text":"struct NeoHookean <: ConstitutiveModels.AbstractHyperelasticModel{2, 0}\n\n\n\n\n\n","category":"type"},{"location":"mechanics/neohookean/#ConstitutiveModels.helmholtz_free_energy-Tuple{NeoHookean, Vararg{Any, 5}}","page":"NeoHookean","title":"ConstitutiveModels.helmholtz_free_energy","text":"psi = frac12leftfrac12left(J^2 - 1right) - ln Jright         + frac12muleft(barI_1 - 3right)\n\nhelmholtz_free_energy(\n    _::NeoHookean,\n    props,\n    Δt,\n    ∇u,\n    θ,\n    Z\n) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"mechanics/neohookean/#ConstitutiveModels.initialize_props-Tuple{NeoHookean, Dict{String}}","page":"NeoHookean","title":"ConstitutiveModels.initialize_props","text":"initialize_props(_::NeoHookean, inputs::Dict{String}) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"mechanics/neohookean/#Pure-Shear-Strain","page":"NeoHookean","title":"Pure Shear Strain","text":"","category":"section"},{"location":"mechanics/neohookean/#Analytic-Solution","page":"NeoHookean","title":"Analytic Solution","text":"","category":"section"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_11 = fracmu3leftfrac12left(lambda^2 + lambda^-2right) - 1right","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_22 = mathbfsigma_11","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_33 = fracmu3left(2 - lambda^2 + lambda^-2right)","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_12 = fracmu2left(lambda^2 - lambda^-2right)","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"All other components are zero","category":"page"},{"location":"mechanics/neohookean/#Verification","page":"NeoHookean","title":"Verification","text":"","category":"section"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"Here is a comparison of an analytic solution to the uniaxial stress boundary value problem in displacement control.","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"using ConstitutiveModels\nusing Plots\n\nfunction neohookean_pure_shear_strain()\n    inputs = Dict(\n        \"Young's modulus\" => 1.0,#u\"MPa\",\n        \"Poisson's ratio\" => 0.3\n    )\n\n    model = NeoHookean()\n    props = initialize_props(model, inputs)\n    Δt = 0.0\n    θ = 0.0\n    Z = initialize_state(model)\n\n    λs = LinRange(1., 1.25, 101)\n    motion = PureShearStrain{Float64}()\n\n    ∇us, σs, Zs = simulate_material_point(cauchy_stress, model, props, Δt, θ, Z, motion, λs)\n\n    μ = props[2]\n    σ_11s_an = (μ / 3.) * (0.5 * (λs.^2 .+ λs.^(-2)) .- 1.)\n    σ_33s_an = (μ / 3.) * (2. .- λs.^2 .+ λs.^(-2))\n    σ_12s_an = (μ / 2.) * (λs.^2 .- λs.^(-2))\n\n    plot(motion, ∇us, σs, Zs, σ_11s_an, σ_33s_an, σ_12s_an)\nend\nneohookean_pure_shear_strain()","category":"page"},{"location":"mechanics/neohookean/#Simple-Shear","page":"NeoHookean","title":"Simple Shear","text":"","category":"section"},{"location":"mechanics/neohookean/#Analytic-Solution-2","page":"NeoHookean","title":"Analytic Solution","text":"","category":"section"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_11 = frac23mugamma^2","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_22 = -frac13mugamma^2","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_33 = mathbfsigma_22","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_12 = mugamma","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"All other components are zero","category":"page"},{"location":"mechanics/neohookean/#Verification-2","page":"NeoHookean","title":"Verification","text":"","category":"section"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"Here is a comparison of an analytic solution to the uniaxial stress boundary value problem in displacement control.","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"using ConstitutiveModels\nusing Plots\n\nfunction neohookean_simple_shear()\n    inputs = Dict(\n        \"Young's modulus\" => 1.0,#u\"MPa\",\n        \"Poisson's ratio\" => 0.3\n    )\n\n    model = NeoHookean()\n    props = initialize_props(model, inputs)\n    Δt = 0.0\n    θ = 0.0\n    Z = initialize_state(model)\n\n    γs = LinRange(0., 1., 101)\n    motion = SimpleShear{Float64}()\n\n    ∇us, σs, Zs = simulate_material_point(cauchy_stress, model, props, Δt, θ, Z, motion, γs)\n\n    μ = props[2]\n    σ_11s_an = (2. / 3.) * μ * γs.^2\n    σ_22s_an = -(1. / 3.) * μ * γs.^2\n    σ_12s_an = μ * γs\n\n    plot(motion, ∇us, σs, Zs, σ_11s_an, σ_22s_an, σ_12s_an)\nend\nneohookean_simple_shear()","category":"page"},{"location":"mechanics/neohookean/#Uniaxial-Strain","page":"NeoHookean","title":"Uniaxial Strain","text":"","category":"section"},{"location":"mechanics/neohookean/#Analytic-solution","page":"NeoHookean","title":"Analytic solution","text":"","category":"section"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_11 = frac12kappaleft(lambda - frac1lambdaright) + frac23muleft(lambda^2 - 1right)lambda^-53","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_22 = frac12kappaleft(lambda - frac1lambdaright) - frac13muleft(lambda^2 - 1right)lambda^-53","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_33 = mathbfsigma_22","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"All other components are zero.","category":"page"},{"location":"mechanics/neohookean/#Verification-3","page":"NeoHookean","title":"Verification","text":"","category":"section"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"Here is a comparison of an analytic solution to the uniaxial stress boundary value problem in displacement control.","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"using ConstitutiveModels\nusing Plots\n\nfunction neohookean_uniaxial_strain()\n    inputs = Dict(\n        \"Young's modulus\" => 1.0,#u\"MPa\",\n        \"Poisson's ratio\" => 0.3\n    )\n\n    model = NeoHookean()\n    props = initialize_props(model, inputs)\n    Δt = 0.0\n    θ = 0.0\n    Z = initialize_state(model)\n\n    λs = LinRange(1., 4., 101)\n    motion = UniaxialStrain{Float64}()\n\n    ∇us, σs, Zs = simulate_material_point(cauchy_stress, model, props, Δt, θ, Z, motion, λs)\n\n    κ, μ = props[1], props[2]\n\n    σ_11s_an = 0.5 * κ * (λs .- 1 ./ λs) + \n               (2. / 3.) * μ * (λs.^2 .- 1.) .* λs .^ (-5. / 3.) \n    σ_22s_an = 0.5 * κ * (λs .- 1 ./ λs) -\n               (1. / 3.) * μ * (λs.^2 .- 1.) .* λs .^ (-5. / 3.) \n\n    plot(motion, ∇us, σs, Zs, σ_11s_an, σ_22s_an)\nend\nneohookean_uniaxial_strain()","category":"page"},{"location":"mechanics/neohookean/#Uniaxial-Stress","page":"NeoHookean","title":"Uniaxial Stress","text":"","category":"section"},{"location":"mechanics/neohookean/#Analytic-solution-2","page":"NeoHookean","title":"Analytic solution","text":"","category":"section"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_11 = frac12kappaleft(lambda - frac1lambdaright) + frac23muleft(lambda^2 - 1right)lambda^-53","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_22 = frac12kappaleft(lambda - frac1lambdaright) - frac13muleft(lambda^2 - 1right)lambda^-53","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"mathbfsigma_33 = mathbfsigma_22","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"All other components are zero.","category":"page"},{"location":"mechanics/neohookean/#Verification-4","page":"NeoHookean","title":"Verification","text":"","category":"section"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"Here is a comparison of an analytic solution to the uniaxial stress boundary value problem in displacement control.","category":"page"},{"location":"mechanics/neohookean/","page":"NeoHookean","title":"NeoHookean","text":"using ConstitutiveModels\nusing Plots\n\nfunction neohookean_uniaxial_strain()\n    inputs = Dict(\n        \"Young's modulus\" => 1.0,#u\"MPa\",\n        \"Poisson's ratio\" => 0.3\n    )\n\n    model = NeoHookean()\n    props = initialize_props(model, inputs)\n    Δt = 0.0\n    θ = 0.0\n    Z = initialize_state(model)\n\n    λs = LinRange(1., 4., 101)\n    motion = UniaxialStressDisplacementControl{Float64}()\n\n    ∇us, σs, Zs = simulate_material_point(cauchy_stress, model, props, Δt, θ, Z, motion, λs)\n\n    κ, μ = props[1], props[2]\n\n    σ_11s_an = 0.5 * κ * (λs .- 1 ./ λs) + \n               (2. / 3.) * μ * (λs.^2 .- 1.) .* λs .^ (-5. / 3.) \n    σ_22s_an = 0.5 * κ * (λs .- 1 ./ λs) -\n               (1. / 3.) * μ * (λs.^2 .- 1.) .* λs .^ (-5. / 3.) \n\n    plot(motion, ∇us, σs, Zs)#, σ_11s_an, σ_22s_an)\nend\nneohookean_uniaxial_strain()","category":"page"},{"location":"common_methods/#ConstitutiveModels.cauchy_stress-Tuple{Union{ConstitutiveModels.AbstractMechanicalModel, ConstitutiveModels.AbstractThermoMechanicalModel}, Any, Any, Any, Any, Any, Vararg{Any}}","page":"Common Methods","title":"ConstitutiveModels.cauchy_stress","text":"cauchy_stress(\n    model::Union{ConstitutiveModels.AbstractMechanicalModel, ConstitutiveModels.AbstractThermoMechanicalModel},\n    props,\n    Δt,\n    ∇u,\n    θ,\n    Z,\n    args...\n) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"common_methods/#ConstitutiveModels.helmholtz_free_energy-Tuple{Union{ConstitutiveModels.AbstractMechanicalModel, ConstitutiveModels.AbstractThermoMechanicalModel}, Any, Any, Any, Any, Any, Vararg{Any}}","page":"Common Methods","title":"ConstitutiveModels.helmholtz_free_energy","text":"Expected abstract interface where \n\nInputs:\n\nprops      - array of properties\n\nΔt`        - time step\n\n∇θ         - absolute temperature gradient\n\nθ          - absolute temperature\n\nZ          - current (old) state variable array\n\nargs       - potentially additional arguments for special models\n\nOuputs:\n\nψ            - helmholtz free energy\n\nmathcalZ - new state variable array (different from input Z)\n\nhelmholtz_free_energy(\n    _::Union{ConstitutiveModels.AbstractMechanicalModel, ConstitutiveModels.AbstractThermoMechanicalModel},\n    props,\n    Δt,\n    ∇u,\n    θ,\n    Z,\n    args...\n) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"common_methods/#ConstitutiveModels.material_tangent-Tuple{Union{ConstitutiveModels.AbstractMechanicalModel, ConstitutiveModels.AbstractThermoMechanicalModel}, Any, Any, Any, Any, Any, Vararg{Any}}","page":"Common Methods","title":"ConstitutiveModels.material_tangent","text":"Expected abstract interface where \n\nInputs:\n\nprops      - array of properties\n\nΔt`        - time step\n\n∇θ         - absolute temperature gradient\n\nθ          - absolute temperature\n\nZ          - current (old) state variable array\n\nargs       - potentially additional arguments for special models\n\nOuputs:\n\nmathbfP  - first Piola-Kirchoff stress tensor\n\nmathcalZ - new state variable array (different from input Z)\n\nIf this method is not defined for a model, it will fallback to  the current default AD interface in ConstitutiveModels.jl by differentiating the output of helmholtz_free_energy with respect to ∇u, e.g.\n\nmathbbA = fracpartial^2psipartialnablamathbfupartialnablamathbfu =  fracpartial^2psipartialmathbfFpartialmathbfF\n\nmaterial_tangent(\n    model::Union{ConstitutiveModels.AbstractMechanicalModel, ConstitutiveModels.AbstractThermoMechanicalModel},\n    props,\n    Δt,\n    ∇u,\n    θ,\n    Z,\n    args...\n) -> Any\n\n\n\n\n\n\n","category":"method"},{"location":"common_methods/#ConstitutiveModels.pk1_stress-Tuple{Union{ConstitutiveModels.AbstractMechanicalModel, ConstitutiveModels.AbstractThermoMechanicalModel}, Any, Any, Any, Any, Any, Vararg{Any}}","page":"Common Methods","title":"ConstitutiveModels.pk1_stress","text":"Expected abstract interface where \n\nInputs:\n\nprops      - array of properties\n\nΔt`        - time step\n\n∇θ         - absolute temperature gradient\n\nθ          - absolute temperature\n\nZ          - current (old) state variable array\n\nargs       - potentially additional arguments for special models\n\nOuputs:\n\nmathbfP  - first Piola-Kirchoff stress tensor\n\nmathcalZ - new state variable array (different from input Z)\n\nIf this method is not defined for a model, it will fallback to  the current default AD interface in ConstitutiveModels.jl by differentiating the output of helmholtz_free_energy with respect to ∇u, e.g.\n\nmathbfP = fracpartialpsipartialnablamathbfu =  fracpartialpsipartialmathbfF\n\npk1_stress(\n    model::Union{ConstitutiveModels.AbstractMechanicalModel, ConstitutiveModels.AbstractThermoMechanicalModel},\n    props,\n    Δt,\n    ∇u,\n    θ,\n    Z,\n    args...\n) -> Tuple{Any, Any}\n\n\n\n\n\n\n","category":"method"},{"location":"#ConstitutiveModels","page":"Home","title":"ConstitutiveModels","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ConstitutiveModels.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pkg> add ConstitutiveModels","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"ConstitutiveModels\")","category":"page"},{"location":"abstract_interface/#ConstitutiveModels.initialize_props-Tuple{Any, Dict{String}}","page":"Abstract Interface","title":"ConstitutiveModels.initialize_props","text":"All models are assumed to take in a type tag for the model and a Dict of props\n\nThis method we likely can't statically compile due to the Any\n\n\n\n\n\n","category":"method"},{"location":"abstract_interface/#ConstitutiveModels.initialize_state-Union{Tuple{ConstitutiveModels.AbstractConstitutiveModel{NP, NS}}, Tuple{NS}, Tuple{NP}, Tuple{ConstitutiveModels.AbstractConstitutiveModel{NP, NS}, Any}} where {NP, NS}","page":"Abstract Interface","title":"ConstitutiveModels.initialize_state","text":"Default state constructor to just return zeros\n\n\n\n\n\n","category":"method"}]
}
